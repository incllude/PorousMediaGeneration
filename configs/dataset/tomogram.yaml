_target_: dataset.dataset.TomogramDataset
volume_shape: [3, 64, 64, 64]
segmentation_paths: 
  - segm: /kaggle/input/porous-media/mt_simon_cropped_top_segm.npy
    tomo: /kaggle/input/porous-media/mt_simon_cropped_top_tomo.npy
  - segm: /kaggle/input/porous-media/mt_simon_cropped_bottom_segm.npy
    tomo: /kaggle/input/porous-media/mt_simon_cropped_bottom_tomo.npy
num_samples: 160
transforms:
  _target_: monai.transforms.Compose
  transforms:
    - _target_: monai.transforms.RandSpatialCropd
      roi_size: [256, 256, 256]
      keys: [tomo, segm]
    - _target_: monai.transforms.Resized
      spatial_size: [64, 64, 64]
      keys: [tomo, segm]
      mode: [trilinear, nearest]
    - _target_: monai.transforms.AsDiscreted
      to_onehot: 3
      keys: [segm]
    - _target_: monai.transforms.RandRotate90d
      prob: 0.5
      spatial_axes: [0, 1]
      keys: [tomo, segm]
    - _target_: monai.transforms.RandRotate90d
      prob: 0.5
      spatial_axes: [1, 2]
      keys: [tomo, segm]
    - _target_: monai.transforms.RandRotate90d
      prob: 0.5
      spatial_axes: [0, 2]
      keys: [tomo, segm]
    - _target_: monai.transforms.RandFlipd
      prob: 0.5
      spatial_axis: 0
      keys: [tomo, segm]
    - _target_: monai.transforms.RandFlipd
      prob: 0.5
      spatial_axis: 1
      keys: [tomo, segm]
    - _target_: monai.transforms.RandFlipd
      prob: 0.5
      spatial_axis: 2
      keys: [tomo, segm]
